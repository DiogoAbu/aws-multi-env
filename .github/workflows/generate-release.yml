name: Generate Release and Publish to NPM

on:
  push:
    branches:
      - main
      - beta
  workflow_dispatch:
    inputs:
      checkoutRef:
        description: "Tag or SHA ref to checkout"
        required: false
        default: ""

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Increase watchers to fix Docker
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.inputs.checkoutRef }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get Yarn cache directory path
        id: yarn-cache-path
        run: echo dir=$(yarn cache dir) >> $GITHUB_OUTPUT

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: error
          command: yarn install --prefer-offline --frozen-lockfile --silent

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Determine version, generate notes, commit and publish tag
        run: npx semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
